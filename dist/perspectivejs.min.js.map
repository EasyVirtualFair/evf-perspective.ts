{"version":3,"file":"perspectivejs.min.js","sources":["../src/index.ts"],"sourcesContent":["/*!\nCopyright 2021 Adonmo  https://www.adonmo.com/\nCopyright 2010 futomi  http://www.html5.jp/\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nThis file was modified by Fabien LOISON <http://www.flozz.fr/>\n\nThis file was further modified by Adonmo https://www.adonmo.com/\n*/\n\ninterface Quadrilateral {\n  topLeftX: number;\n  topLeftY: number;\n  topRightX: number;\n  topRightY: number;\n  bottomRightX: number;\n  bottomRightY: number;\n  bottomLeftX: number;\n  bottomLeftY: number;\n}\n\nexport default class Perspective {\n  // Context for destination (output will go here)\n  private ctxd: CanvasRenderingContext2D;\n\n  // Canvas for original image\n  private cvso: HTMLCanvasElement;\n\n  // Context for original image\n  private ctxo: CanvasRenderingContext2D;\n\n  // Context for transformed image\n  private ctxt: CanvasRenderingContext2D;\n\n  constructor(ctxd: CanvasRenderingContext2D, image: HTMLImageElement) {\n    // check the arguments\n    if (!ctxd || !ctxd.strokeStyle) {\n      return;\n    }\n    if (!image || !image.width || !image.height) {\n      return;\n    }\n    // prepare a <canvas> for the image\n    let cvso = document.createElement(\"canvas\");\n    cvso.width = Math.round(image.width);\n    cvso.height = Math.round(image.height);\n    let ctxo = cvso.getContext(\"2d\");\n    ctxo.drawImage(image, 0, 0, cvso.width, cvso.height);\n    // prepare a <canvas> for the transformed image\n    let cvst = document.createElement(\"canvas\");\n    cvst.width = ctxd.canvas.width;\n    cvst.height = ctxd.canvas.height;\n    let ctxt = cvst.getContext(\"2d\");\n\n    this.ctxd = ctxd;\n    this.cvso = cvso;\n    this.ctxo = ctxo;\n    this.ctxt = ctxt;\n  }\n\n  draw(q: Quadrilateral) {\n    let {\n      topLeftX,\n      topLeftY,\n      topRightX,\n      topRightY,\n      bottomRightX,\n      bottomRightY,\n      bottomLeftX,\n      bottomLeftY,\n    } = q;\n\n    // compute the dimension of each side\n    let dims = [\n      Math.sqrt(\n        Math.pow(topLeftX - topRightX, 2) + Math.pow(topLeftY - topRightY, 2)\n      ), // top side\n      Math.sqrt(\n        Math.pow(topRightX - bottomRightX, 2) +\n          Math.pow(topRightY - bottomRightY, 2)\n      ), // right side\n      Math.sqrt(\n        Math.pow(bottomRightX - bottomLeftX, 2) +\n          Math.pow(bottomRightY - bottomLeftY, 2)\n      ), // bottom side\n      Math.sqrt(\n        Math.pow(bottomLeftX - topLeftX, 2) +\n          Math.pow(bottomLeftY - topLeftY, 2)\n      ), // left side\n    ];\n    //\n    let ow = this.cvso.width;\n    let oh = this.cvso.height;\n    // specify the index of which dimension is longest\n    let base_index = 0;\n    let max_scale_rate = 0;\n    let zero_num = 0;\n    for (let i = 0; i < 4; i++) {\n      let rate = 0;\n      if (i % 2) {\n        rate = dims[i] / ow;\n      } else {\n        rate = dims[i] / oh;\n      }\n      if (rate > max_scale_rate) {\n        base_index = i;\n        max_scale_rate = rate;\n      }\n      if (dims[i] == 0) {\n        zero_num++;\n      }\n    }\n    if (zero_num > 1) {\n      return;\n    }\n    //\n    let step = 2;\n    let cover_step = step * 5;\n    //\n    let ctxo = this.ctxo;\n    let ctxt = this.ctxt;\n    ctxt.clearRect(0, 0, ctxt.canvas.width, ctxt.canvas.height);\n    if (base_index % 2 == 0) {\n      // top or bottom side\n      let ctxl = this.create_canvas_context(ow, cover_step);\n      ctxl.globalCompositeOperation = \"copy\";\n      let cvsl = ctxl.canvas;\n      for (let y = 0; y < oh; y += step) {\n        let r = y / oh;\n        let sx = topLeftX + (bottomLeftX - topLeftX) * r;\n        let sy = topLeftY + (bottomLeftY - topLeftY) * r;\n        let ex = topRightX + (bottomRightX - topRightX) * r;\n        let ey = topRightY + (bottomRightY - topRightY) * r;\n        let ag = Math.atan((ey - sy) / (ex - sx));\n        let sc = Math.sqrt(Math.pow(ex - sx, 2) + Math.pow(ey - sy, 2)) / ow;\n        ctxl.setTransform(1, 0, 0, 1, 0, -y);\n        ctxl.drawImage(ctxo.canvas, 0, 0);\n        //\n        ctxt.translate(sx, sy);\n        ctxt.rotate(ag);\n        ctxt.scale(sc, sc);\n        ctxt.drawImage(cvsl, 0, 0);\n        //\n        ctxt.setTransform(1, 0, 0, 1, 0, 0);\n      }\n    } else if (base_index % 2 == 1) {\n      // right or left side\n      let ctxl = this.create_canvas_context(cover_step, oh);\n      ctxl.globalCompositeOperation = \"copy\";\n      let cvsl = ctxl.canvas;\n      for (let x = 0; x < ow; x += step) {\n        let r = x / ow;\n        let sx = topLeftX + (topRightX - topLeftX) * r;\n        let sy = topLeftY + (topRightY - topLeftY) * r;\n        let ex = bottomLeftX + (bottomRightX - bottomLeftX) * r;\n        let ey = bottomLeftY + (bottomRightY - bottomLeftY) * r;\n        let ag = Math.atan((sx - ex) / (ey - sy));\n        let sc = Math.sqrt(Math.pow(ex - sx, 2) + Math.pow(ey - sy, 2)) / oh;\n        ctxl.setTransform(1, 0, 0, 1, -x, 0);\n        ctxl.drawImage(ctxo.canvas, 0, 0);\n        //\n        ctxt.translate(sx, sy);\n        ctxt.rotate(ag);\n        ctxt.scale(sc, sc);\n        ctxt.drawImage(cvsl, 0, 0);\n        //\n        ctxt.setTransform(1, 0, 0, 1, 0, 0);\n      }\n    }\n    // set a clipping path and draw the transformed image on the destination canvas.\n    this.ctxd.save();\n    this.ctxd.drawImage(ctxt.canvas, 0, 0);\n    this._applyMask(this.ctxd, q);\n    this.ctxd.restore();\n  }\n\n  private create_canvas_context(w: number, h: number) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = w;\n    canvas.height = h;\n    let ctx = canvas.getContext(\"2d\");\n    return ctx;\n  }\n\n  private _applyMask(ctx: CanvasRenderingContext2D, q: Quadrilateral) {\n    ctx.beginPath();\n    ctx.moveTo(q.topLeftX, q.topLeftY);\n    ctx.lineTo(q.topRightX, q.topRightY);\n    ctx.lineTo(q.bottomRightX, q.bottomRightY);\n    ctx.lineTo(q.bottomLeftX, q.bottomLeftY);\n    ctx.closePath();\n    ctx.globalCompositeOperation = \"destination-in\";\n    ctx.fill();\n    ctx.globalCompositeOperation = \"source-over\";\n  }\n}\n"],"names":["ctxd","image","strokeStyle","width","height","cvso","document","createElement","Math","round","ctxo","getContext","drawImage","cvst","canvas","ctxt","this","Perspective","q","topLeftX","topLeftY","topRightX","topRightY","bottomRightX","bottomRightY","bottomLeftX","bottomLeftY","dims","sqrt","pow","ow","oh","base_index","max_scale_rate","zero_num","i","rate","clearRect","ctxl","create_canvas_context","step","globalCompositeOperation","cvsl","y","sx","r","sy","ex","ey","ag","atan","sc","setTransform","translate","rotate","scale","x","save","_applyMask","restore","w","h","ctx","beginPath","moveTo","lineTo","closePath","fill"],"mappings":"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"}